<?xml version="1.0"?>
<robot name="bluerov" xmlns:xacro="http://ros.org/wiki/xacro">
    <xacro:property name="base_radius" value="0.1"/>
    <xacro:property name="base_height" value="0.5"/>
    <xacro:property name="module_gap" value="0.1"/>
    
    <xacro:property name="width" value="0.5"/>
    <xacro:property name="height" value="0.5"/>
    <xacro:property name="length" value="0.5"/>

    <xacro:property name="mass" value="4"/>
    <xacro:property name="l" value="0.338"/>
    <xacro:property name="L" value="0.457"/>
    <xacro:property name="h" value="0.254"/>

    <xacro:property name="masscam" value="4"/>
    <xacro:property name="lcam" value="0.05"/>
    <xacro:property name="Lcam" value="0.1"/>
    <xacro:property name="hcam" value="0.05"/>

    <xacro:macro name="cylinder_inertia" params="m r h">
        <inertial>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <mass value="${m}"/>
            <inertia ixx="${(m/12) * (3*r*r + h*h)}" ixy = "0" ixz = "0" iyy="${(m/12) * (3*r*r + h*h)}" iyz = "0" izz="${(m/2) * (r*r)}"/>
        </inertial>
    </xacro:macro>

    <xacro:macro name="box_inertia" params="m w h d">
        <inertial>
            <origin rpy="${pi/2} 0 ${pi/2}" xyz="0 ${-0.41} 0"/>
            <mass value="${m}"/>
            <inertia ixx="${(m/12) * (h*h + d*d)}" ixy="0.0" ixz="0.0" iyy="${(m/12) * (w*w + d*d)}" iyz="0.0" izz="${(m/12) * (w*w + h*h)}"/>
        </inertial>
    </xacro:macro>

    <xacro:macro name="link_module" params="name m">
        <link name="${name}_link">
            <visual>
                <geometry>
                    <mesh filename="file://$(find bluerov)/src/description/meshes/BLUEROV.dae" scale = "0.001 0.001 0.001"/>
                    <!--<box size="${l} ${L} ${h}"/>-->
                </geometry>
                <origin rpy="${pi/2} 0 ${pi/2}" xyz="${0.237} ${-0.825} 0"/>
                <!-- <origin rpy="0 0 0" xyz="0 0 ${wheel_radius - wheel_zoff}"/> -->
                <material name="Cyan">
                    <color rgba="0.5 0.5 0.5 0.5"/>
                </material>
            </visual>
            <!-- <collision>
                <geometry>
                    <box size="${l} ${L} ${h}"/>
                </geometry>
                <origin rpy="${pi/2} 0 ${pi/2}" xyz="0 ${-0.2} 0"/>
            </collision> 

            <xacro:box_inertia m="${m}" w="${l}" h="${h}" d="${L}"/>-->
        </link>

    </xacro:macro>

    <link name="front_link">
        <visual>
            <geometry>
                <box size="${lcam} ${Lcam} ${hcam}"/>
            </geometry>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <!-- <origin rpy="0 0 0" xyz="0 0 ${wheel_radius - wheel_zoff}"/> -->
            <material name="Cyan">
                <color rgba="0.5 0.5 0.5 0.5"/>
            </material>
        </visual>
        <collision>
            <geometry>
                <box size="${lcam} ${Lcam} ${hcam}"/>
            </geometry>
            <origin rpy="0 0 0" xyz="0 0 0"/>
        </collision>
        <xacro:box_inertia m="${masscam}" w="${lcam}" h="${hcam}" d="${Lcam}"/>

    </link>

        <!--<gazebo reference="${name}_link"><material>Gazebo/White</material></gazebo>-->


    <xacro:link_module name="base" m="${mass}" />
    
    <link name="joint_link">
        <visual>
            <geometry>
                <box size="0.05 0.05 0.05"/>
            </geometry>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <material name="Cyan">
                <color rgba="0.5 0.5 0.5 0.5"/>
            </material>
        </visual>
        <collision>
            <geometry>
                <box size="0.05 0.05 0.05"/>
            </geometry>
            <origin rpy="0 0 0" xyz="0 0 0"/>
        </collision>
        <xacro:box_inertia m="0.001" w="0.05" d="0.05" h="0.05"/>
    </link>


    <link name="dummy_joint_link">
        <visual>
            <geometry>
                <box size="0.0001 0.0001 0.0001"/>
            </geometry>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <material name="Cyan">
                <color rgba="0.5 0.5 0.5 0.5"/>
            </material>
        </visual>
        <xacro:box_inertia m="0.001" w="0.05" d="0.05" h="0.05"/>
    </link>

    <joint name="fixed_joint_base" type="fixed">
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <!-- <origin rpy="0 0 0" xyz="${0.2} ${-0.415} 0"/> ça marche avant de déplacer centre masse--> 
        <parent link="base_link"/>
        <child link="joint_link"/>
    </joint>

    <joint name="middle_joint" type="revolute">
        <parent link="joint_link"/>
        <child link="dummy_joint_link"/>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <axis xyz="0 0 1"/>
        <limit lower="-1.57" upper="1.57" effort="1" velocity="1"/>
    </joint>

    <joint name="fixed_joint_front" type="fixed">
        <origin rpy="0 0 0" xyz="${0.2} ${-0.415} 0"/>
        <parent link="dummy_joint_link"/>
        <child link="front_link"/>
    </joint>

    


    <gazebo reference="front_link">
        <sensor name="bluerov_ros_camera" type="depth">
        <visualize>true</visualize>
        <update_rate>30.0</update_rate>
        <camera name="camera">
            <horizontal_fov>1.92</horizontal_fov>
            <image>
            <width>1280</width>
            <height>720</height>
            <format>R8G8B8</format>
            </image>
            <clip>
            <near>0.05</near>
            <far>8</far>
            </clip>
        </camera>
        <plugin name="depth_camera_controller" filename="libgazebo_ros_camera.so">
            <baseline>0.2</baseline>
            <alwaysOn>true</alwaysOn>
            <updateRate>0.0</updateRate>
            <frame_name>camera_depth_frame</frame_name>
            <pointCloudCutoff>0.5</pointCloudCutoff>
            <pointCloudCutoffMax>8.0</pointCloudCutoffMax>
            <distortionK1>0</distortionK1>
            <distortionK2>0</distortionK2>
            <distortionK3>0</distortionK3>
            <distortionT1>0</distortionT1>
            <distortionT2>0</distortionT2>
            <CxPrime>0</CxPrime>
            <Cx>0</Cx>
            <Cy>0</Cy>
            <focalLength>0</focalLength>
            <hackBaseline>0</hackBaseline>
        </plugin>
        </sensor>
    </gazebo>
    <gazebo>
        <plugin name="custom_plugin" filename="libmy_plugin.so"> </plugin>
    </gazebo>
</robot>